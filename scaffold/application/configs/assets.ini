[production]

; CDN
cdn.type = "local"
cdn.domain = ""
cdn.extensions = "jpg,jpeg,gif,png,zip,pdf,xls,xlsx,csv"
cdn.css.location = "local"
;cdn.js.location = "s3"

;cdn.type = 's3'
;cdn.domain = "grrr.nl.s3.amazonaws.com"
;Note! Always use the S3 domain name with the bucket included.
;Like: $bucketName.s3.amazonaws.com/file
;Not like: s3-eu-west-1.amazonaws.com/$bucketname/file

;cdn.s3.apikey = "AKIAJHH2JPAH2R7NIUXA"
;cdn.s3.secret = "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"
;cdn.s3.bucket = "grrr.nl"

cdn.path.upload.image = "/uploads/shared/images"
cdn.path.upload.document = "/uploads/shared/documents"
cdn.path.static.image = "/media/images"
cdn.path.static.document = "/documents"

; IMAGE TEMPLATES
; relative HTTP path to the dynamic image scaler, normally '/images/'
image.uri.dynamic = '/images/'
; filename to a GIF file in the local upload folder that acts as a replacement for missing remote images to be downloaded
image.filename.missingImage = '404.gif'
; default background color for images which canvases are larger than the content area
image.bgcolor = 'CCCCCC'

; scaling template configuration
image.setHtmlHeight = 1

image.template.cms_list.w = 64
image.template.cms_list.grow = 1
image.template.cms_list.richtextable = 0

image.template.cms_preview.w = 320
image.template.cms_preview.grow = 1
image.template.cms_preview.richtextable = 0

; VIDEO TEMPLATES
;video.template.w = 740
;video.template.h = 462

; ASSET MINIFICATION SETUP
assets.js.basePath = "/js"
assets.js.main_js.filename = "main.min.js"
assets.js.main_js.sourcefiles[] = "garp/front/styling.js"
assets.js.main_js.sourcefiles[] = "garp/front/flashmessage.js"
assets.js.main_js.sourcefiles[] = "garp/front/cookies.js"
assets.js.main_js.sourcefiles[] = "libs/fastclick.js"
assets.js.main_js.sourcefiles[] = "main.js"

assets.js.root = "/js/build/prod"
assets.css.root = "/css/compiled/prod"

[staging : production]

cdn.domain = ""
cdn.type = "local"
cdn.css.location = "local"
cdn.path.upload.image = "/uploads/shared/images"
cdn.path.upload.document = "/uploads/shared/documents"

[integration : staging]

cdn.domain = ""
cdn.type = "local"
cdn.css.location = "local"

cdn.path.upload.image = "/uploads/shared/images"
cdn.path.upload.document = "/uploads/shared/documents"

[development : integration]

cdn.domain = ""
cdn.type = "local"
cdn.css.location = "local"

cdn.path.upload.image = "/uploads/private/images"
cdn.path.upload.document = "/uploads/private/documents"

assets.js.main_js.disabled = true
assets.js.root = "/js/build/dev"
assets.css.root = "/css/compiled/dev"

[testing : development]
